version: '3.8'

services:
  auth_service:
    build:
      context: .
      dockerfile: Dockerfile-auth
    ports:
      - "8081:8081"
    depends_on:
      - influx_service
      - mysql_service
    environment:
      - INFLUXDB_HOST=influx_service
      - INFLUXDB_PORT=8084
      - MYSQL_HOST=mysql_service
      - MYSQL_PORT=8085
    networks:
      - app-network

  rule_service:
    build:
      context: .
      dockerfile: Dockerfile-rule
    ports:
      - "8082:8082"
    depends_on:
      - influx_service
      - mysql_service
    environment:
      - INFLUXDB_HOST=influx_service
      - INFLUXDB_PORT=8084
      - MYSQL_HOST=mysql_service
      - MYSQL_PORT=8085
    networks:
      - app-network

  user_service:
    build:
      context: .
      dockerfile: Dockerfile-user
    ports:
      - "8083:8083"
    depends_on:
      - influx_service
      - mysql_service
    environment:
      - INFLUXDB_HOST=influx_service
      - INFLUXDB_PORT=8084
      - MYSQL_HOST=mysql_service
      - MYSQL_PORT=8085
    networks:
      - app-network

  influx_service:
    build:
      context: .
      dockerfile: Dockerfile-influx
    ports:
      - "8084:8084"
    depends_on:
      - mysql_service
    environment:
      - MYSQL_HOST=mysql_service
      - MYSQL_PORT=8085
    volumes:
      - influxdb_data:/var/lib/influxdb
    networks:
      - app-network

  mysql_service:
    build:
      context: .
      dockerfile: Dockerfile-mysql
    ports:
      - "8085:8085"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  schedule_service:
    build:
      context: .
      dockerfile: Dockerfile-schedule
    ports:
      - "8086:8086"
    depends_on:
      - mysql_service
    environment:
      - INFLUXDB_HOST=influx_service
      - INFLUXDB_PORT=8084
      - MYSQL_HOST=mysql_service
      - MYSQL_PORT=8085
    networks:
      - app-network

  device_service:
    build:
      context: .
      dockerfile: Dockerfile-device
    ports:
      - "8087:8087"
    depends_on:
      - influx_service
      - mysql_service
    environment:
      - INFLUXDB_HOST=influx_service
      - INFLUXDB_PORT=8084
      - MYSQL_HOST=mysql_service
      - MYSQL_PORT=8085
    networks:
      - app-network

  weather_service:
    build:
      context: .
      dockerfile: Dockerfile-weather
    ports:
      - "8089:8089"
    depends_on:
      - influx_service
      - mysql_service
    environment:
      - INFLUXDB_HOST=influx_service
      - INFLUXDB_PORT=8084
      - MYSQL_HOST=mysql_service
      - MYSQL_PORT=8085
    networks:
      - app-network

volumes:
  influxdb_data:
  mysql_data:

networks:
  app-network:
    driver: bridge
